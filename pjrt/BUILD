load("//third_party/tensorflow/compiler/xla:xla.google.bzl", "xla_cc_test")
load("//third_party/tensorflow/compiler/xla/tsl:tsl.bzl", "internal_visibility")
load(
    "//third_party/tensorflow/compiler/xla/tsl/platform:build_config.bzl",
    "tf_proto_library",
)
load("//third_party/tensorflow/compiler/xla/tsl/platform:rules_cc.bzl", "cc_library")
load(
    "//third_party/tensorflow/compiler/xla/tsl/platform/google:cuda_build_defs.bzl",
    "if_cuda_is_configured",
)

package(
    default_applicable_licenses = ["//third_party/tensorflow:license"],  # copybara:comment
    default_visibility = internal_visibility(["//third_party/tensorflow/compiler/xla:internal"]),
    licenses = ["notice"],
)

package_group(
    name = "friends",
    includes = [
        "//third_party/tensorflow/compiler/xla:friends",
        "//third_party/tensorflow/compiler/xla:internal",
    ],
    packages = [
        "//third_party/australis/...",
        "//third_party/gxlang/...",
        "//third_party/openxla_pjrt_plugin/...",
        "//third_party/py/jax/...",
        "//third_party/tensorflow/core/tfrt/ifrt/...",
        "//third_party/torch_tpu/...",
    ],
)

cc_library(
    name = "worker_thread",
    srcs = ["worker_thread.cc"],
    hdrs = ["worker_thread.h"],
    deps = [
        "//third_party/absl/base:core_headers",
        "//third_party/absl/functional:any_invocable",
        "//third_party/absl/log:check",
        "//third_party/absl/synchronization",
        "//third_party/tensorflow/tsl/platform:env",
    ],
)

cc_library(
    name = "event_pool",
    srcs = ["event_pool.cc"],
    hdrs = ["event_pool.h"],
    deps = [
        "//third_party/absl/base:core_headers",
        "//third_party/absl/status:statusor",
        "//third_party/absl/synchronization",
        "//third_party/tensorflow/compiler/xla:types",
        "//third_party/tensorflow/compiler/xla/stream_executor:event",
        "//third_party/tensorflow/compiler/xla/stream_executor:stream",
        "//third_party/tensorflow/compiler/xla/stream_executor:stream_executor_h",
        "//third_party/tensorflow/tsl/platform:statusor",
    ],
)

cc_library(
    name = "semaphore",
    srcs = ["semaphore.cc"],
    hdrs = ["semaphore.h"],
    visibility = internal_visibility([":friends"]),
    deps = [
        "//third_party/absl/base:core_headers",
        "//third_party/absl/log:check",
        "//third_party/absl/synchronization",
        "//third_party/tensorflow/compiler/xla:types",
        "//third_party/tensorflow/tsl/platform:logging",
    ],
)

xla_cc_test(
    name = "semaphore_test",
    srcs = ["semaphore_test.cc"],
    deps = [
        ":semaphore",
        "//testing/base/public:gunit_main",
        "//third_party/absl/synchronization",
        "//third_party/tensorflow/compiler/xla/hlo/testlib:test",
        "//third_party/tensorflow/tsl/platform:env",
    ],
)

cc_library(
    name = "abstract_tracked_device_buffer",
    srcs = ["abstract_tracked_device_buffer.cc"],
    hdrs = ["abstract_tracked_device_buffer.h"],
    deps = [
        ":pjrt_client",
        ":pjrt_future",
        "//third_party/absl/base:core_headers",
        "//third_party/absl/log:check",
        "//third_party/absl/status",
        "//third_party/absl/status:statusor",
        "//third_party/absl/synchronization",
        "//third_party/tensorflow/tsl/profiler/lib:traceme",
    ],
)

cc_library(
    name = "common_pjrt_client",
    srcs = [
        "common_pjrt_client.cc",
        "host_to_device_transfer_manager.cc",
    ],
    hdrs = [
        "common_pjrt_client.h",
        "host_to_device_transfer_manager.h",
    ],
    deps = [
        ":async_work_runner",
        ":device_event",
        ":pjrt_client",
        ":raw_buffer",
        "//third_party/absl/base:core_headers",
        "//third_party/absl/container:inlined_vector",
        "//third_party/absl/functional:any_invocable",
        "//third_party/absl/log:check",
        "//third_party/absl/status",
        "//third_party/absl/status:statusor",
        "//third_party/absl/strings",
        "//third_party/absl/synchronization",
        "//third_party/absl/types:span",
        "//third_party/tensorflow/compiler/xla:literal",
        "//third_party/tensorflow/compiler/xla:shape_util",
        "//third_party/tensorflow/compiler/xla:util",
        "//third_party/tensorflow/compiler/xla:xla_data_proto_cc",
        "//third_party/tensorflow/compiler/xla/tsl/concurrency:async_value",
        "//third_party/tensorflow/compiler/xla/tsl/concurrency:ref_count",
        "//third_party/tensorflow/compiler/xla/tsl/platform:statusor",
        "//third_party/tensorflow/tsl/platform:casts",
        "//third_party/tensorflow/tsl/profiler/lib:connected_traceme",
        "//third_party/tensorflow/tsl/profiler/lib:context_types_hdrs",
        "//third_party/tensorflow/tsl/profiler/lib:scoped_memory_debug_annotation",
    ],
)

cc_library(
    name = "tracked_device_buffer",
    srcs = ["tracked_device_buffer.cc"],
    hdrs = ["tracked_device_buffer.h"],
    deps = [
        ":abstract_tracked_device_buffer",
        ":event_pool",
        ":pjrt_client",
        ":pjrt_common",
        "//third_party/absl/algorithm:container",
        "//third_party/absl/base:core_headers",
        "//third_party/absl/container:flat_hash_map",
        "//third_party/absl/container:flat_hash_set",
        "//third_party/absl/container:inlined_vector",
        "//third_party/absl/functional:any_invocable",
        "//third_party/absl/log",
        "//third_party/absl/log:check",
        "//third_party/absl/status",
        "//third_party/absl/synchronization",
        "//third_party/absl/types:span",
        "//third_party/tensorflow/compiler/xla:shape_tree",
        "//third_party/tensorflow/compiler/xla:shape_util",
        "//third_party/tensorflow/compiler/xla/service:executable",
        "//third_party/tensorflow/compiler/xla/service:maybe_owning_device_memory",
        "//third_party/tensorflow/compiler/xla/service:shaped_buffer",
        "//third_party/tensorflow/compiler/xla/stream_executor:device_memory",
        "//third_party/tensorflow/compiler/xla/stream_executor:device_memory_allocator",
        "//third_party/tensorflow/compiler/xla/stream_executor:event",
        "//third_party/tensorflow/compiler/xla/tsl/concurrency:async_value",
        "//third_party/tensorflow/compiler/xla/tsl/concurrency:ref_count",
        "//third_party/tensorflow/compiler/xla/tsl/platform:env",
        "//third_party/tensorflow/compiler/xla/tsl/platform:logging",
        "//third_party/tensorflow/tsl/profiler/lib:connected_traceme",
        "//third_party/tensorflow/tsl/profiler/lib:context_types_hdrs",
    ],
)

xla_cc_test(
    name = "tracked_device_buffer_test",
    srcs = ["tracked_device_buffer_test.cc"],
    deps = [
        ":pjrt_client",
        ":pjrt_common",
        ":pjrt_future",
        ":tracked_device_buffer",
        "//testing/base/public:gunit_main",
        "//third_party/absl/log",
        "//third_party/absl/status",
        "//third_party/absl/status:statusor",
        "//third_party/absl/strings:string_view",
        "//third_party/absl/types:span",
        "//third_party/tensorflow/compiler/xla:literal",
        "//third_party/tensorflow/compiler/xla:literal_util",
        "//third_party/tensorflow/compiler/xla:shape_util",
        "//third_party/tensorflow/compiler/xla:status_macros",
        "//third_party/tensorflow/compiler/xla:util",
        "//third_party/tensorflow/compiler/xla:xla_data_proto_cc",
        "//third_party/tensorflow/compiler/xla/client:client_library",
        "//third_party/tensorflow/compiler/xla/client:local_client",
        "//third_party/tensorflow/compiler/xla/hlo/testlib:test",
        "//third_party/tensorflow/compiler/xla/service:cpu_plugin",
        "//third_party/tensorflow/compiler/xla/stream_executor:device_memory_allocator",
        "//third_party/tensorflow/compiler/xla/tsl/concurrency:ref_count",
        "//third_party/tensorflow/tsl/platform:statusor",
    ],
)

cc_library(
    name = "local_device_state",
    srcs = ["local_device_state.cc"],
    hdrs = ["local_device_state.h"],
    deps = [
        ":event_pool",
        ":pjrt_common",
        ":semaphore",
        ":worker_thread",
        "//third_party/absl/base",
        "//third_party/absl/container:flat_hash_map",
        "//third_party/absl/functional:any_invocable",
        "//third_party/absl/log",
        "//third_party/absl/log:check",
        "//third_party/absl/status",
        "//third_party/absl/strings:str_format",
        "//third_party/absl/synchronization",
        "//third_party/tensorflow/compiler/xla:util",
        "//third_party/tensorflow/compiler/xla/client:local_client",
        "//third_party/tensorflow/compiler/xla/stream_executor:device_memory",
        "//third_party/tensorflow/compiler/xla/stream_executor:stream",
        "//third_party/tensorflow/compiler/xla/stream_executor:stream_executor_h",
        "//third_party/tensorflow/compiler/xla/tsl/platform:env",
        "//third_party/tensorflow/compiler/xla/tsl/platform:errors",
        "//third_party/tensorflow/compiler/xla/tsl/platform:statusor",
        "//third_party/tensorflow/compiler/xla/tsl/protobuf:error_codes_proto_impl_cc",
        "//third_party/tensorflow/compiler/xla/tsl/util:env_var",
        "//third_party/tensorflow/tsl/profiler/lib:traceme",
    ],
)

cc_library(
    name = "pjrt_api",
    srcs = ["pjrt_api.cc"],
    hdrs = ["pjrt_api.h"],
    visibility = internal_visibility([":friends"]),
    deps = [
        "//third_party/absl/container:flat_hash_map",
        "//third_party/absl/log",
        "//third_party/absl/status",
        "//third_party/absl/status:statusor",
        "//third_party/absl/strings",
        "//third_party/tensorflow/compiler/xla/pjrt/c:pjrt_c_api_hdrs",
        "//third_party/tensorflow/compiler/xla/pjrt/c:pjrt_c_api_helpers",
        "//third_party/tensorflow/compiler/xla/tsl/platform:errors",
        "//third_party/tensorflow/tsl/platform",
    ],
)

xla_cc_test(
    name = "pjrt_api_test",
    srcs = ["pjrt_api_test.cc"],
    deps = [
        ":pjrt_api",
        "//testing/base/public:gunit_main",
        "//third_party/tensorflow/compiler/xla/pjrt/c:pjrt_c_api_hdrs",
        "//third_party/tensorflow/compiler/xla/pjrt/c:pjrt_c_api_wrapper_impl",
        "//third_party/tensorflow/compiler/xla/tsl/lib/core:status_test_util",
        "//third_party/tensorflow/compiler/xla/tsl/protobuf:error_codes_proto_impl_cc",
        "//third_party/tensorflow/tsl/platform:status_matchers",
    ],
)

cc_library(
    name = "pjrt_client",
    srcs = ["pjrt_client.cc"],
    hdrs = ["pjrt_client.h"],
    visibility = internal_visibility(["//third_party/tensorflow/compiler/xla:friends"]),
    deps = [
        ":pjrt_common",
        ":pjrt_compiler",
        ":pjrt_device_description",
        ":pjrt_executable",
        ":pjrt_future",
        ":pjrt_layout",
        ":utils",
        "//third_party/absl/base",
        "//third_party/absl/base:core_headers",
        "//third_party/absl/container:flat_hash_map",
        "//third_party/absl/container:inlined_vector",
        "//third_party/absl/functional:any_invocable",
        "//third_party/absl/log",
        "//third_party/absl/log:check",
        "//third_party/absl/status",
        "//third_party/absl/status:statusor",
        "//third_party/absl/strings",
        "//third_party/absl/synchronization",
        "//third_party/absl/types:span",
        "//third_party/llvm/llvm-project/mlir:IR",
        "//third_party/tensorflow/compiler/xla:literal",
        "//third_party/tensorflow/compiler/xla:shape_util",
        "//third_party/tensorflow/compiler/xla:util",
        "//third_party/tensorflow/compiler/xla:xla_data_proto_cc",
        "//third_party/tensorflow/compiler/xla/hlo/builder:xla_computation",
        "//third_party/tensorflow/compiler/xla/hlo/ir:hlo",
        "//third_party/tensorflow/compiler/xla/pjrt/distributed:key_value_store_interface",
        "//third_party/tensorflow/compiler/xla/service:computation_placer_hdr",
        "//third_party/tensorflow/compiler/xla/service:hlo_cost_analysis",
        "//third_party/tensorflow/compiler/xla/tsl/framework:allocator",
        "//third_party/tensorflow/compiler/xla/tsl/platform:statusor",
        "//third_party/tensorflow/tsl/platform:errors",
    ],
)

cc_library(
    name = "pjrt_client_utils",
    srcs = ["pjrt_client_utils.cc"],
    hdrs = ["pjrt_client_utils.h"],
    visibility = internal_visibility(["//third_party/tensorflow/compiler/xla:friends"]),
    deps = [
        ":pjrt_client",
        "//third_party/absl/status:statusor",
        "//third_party/absl/types:span",
        "//third_party/tensorflow/compiler/xla:shape_util",
        "//third_party/tensorflow/compiler/xla:util",
    ],
)

cc_library(
    name = "pjrt_client_test_common",
    testonly = 1,
    srcs = ["pjrt_client_test.cc"],
    hdrs = ["pjrt_client_test.h"],
    deps = [
        ":pjrt_client",
        ":pjrt_compiler",
        "//third_party/absl/status:statusor",
        "//third_party/absl/synchronization",
        "//third_party/absl/types:span",
        "//third_party/tensorflow/compiler/xla:cpu_function_runtime",
        "//third_party/tensorflow/compiler/xla:shape_util",
        "//third_party/tensorflow/compiler/xla:xla_data_proto_cc",
        "//third_party/tensorflow/compiler/xla/hlo/builder:xla_builder",
        "//third_party/tensorflow/compiler/xla/hlo/builder:xla_computation",
        "//third_party/tensorflow/compiler/xla/hlo/parser:hlo_parser",
        "//third_party/tensorflow/compiler/xla/hlo/testlib:test",
        "//third_party/tensorflow/compiler/xla/tests:literal_test_util",
        "//third_party/tensorflow/tsl/platform:statusor",
    ],
    alwayslink = 1,
)

cc_library(
    name = "pjrt_executable",
    srcs = ["pjrt_executable.cc"],
    hdrs = ["pjrt_executable.h"],
    visibility = internal_visibility([":friends"]),
    deps = [
        ":pjrt_common",
        ":pjrt_layout",
        "//third_party/absl/container:flat_hash_map",
        "//third_party/absl/log",
        "//third_party/absl/status",
        "//third_party/absl/status:statusor",
        "//third_party/absl/strings",
        "//third_party/absl/types:span",
        "//third_party/tensorflow/compiler/xla:shape_util",
        "//third_party/tensorflow/compiler/xla:util",
        "//third_party/tensorflow/compiler/xla:xla_data_proto_cc",
        "//third_party/tensorflow/compiler/xla:xla_proto_cc",
        "//third_party/tensorflow/compiler/xla/client:executable_build_options",
        "//third_party/tensorflow/compiler/xla/ffi:execution_context",
        "//third_party/tensorflow/compiler/xla/hlo/ir:hlo",
        "//third_party/tensorflow/compiler/xla/pjrt/proto:compile_options_proto_cc",
        "//third_party/tensorflow/compiler/xla/pjrt/proto:executable_metadata_proto_cc",
        "//third_party/tensorflow/compiler/xla/pjrt/proto:execute_options_proto_cc",
        "//third_party/tensorflow/compiler/xla/service:buffer_assignment",
        "//third_party/tensorflow/compiler/xla/service:compiler",
        "//third_party/tensorflow/compiler/xla/service:computation_layout",
        "//third_party/tensorflow/compiler/xla/service:hlo_cost_analysis",
        "//third_party/tensorflow/compiler/xla/service:hlo_proto_cc",
        "//third_party/tensorflow/compiler/xla/service:hlo_value",
    ],
)

xla_cc_test(
    name = "pjrt_executable_test",
    srcs = ["pjrt_executable_test.cc"],
    deps = [
        ":pjrt_executable",
        "//testing/base/public:gunit_main",
        "//third_party/tensorflow/compiler/xla:shape_util",
        "//third_party/tensorflow/compiler/xla:xla_data_proto_cc",
        "//third_party/tensorflow/compiler/xla/client:executable_build_options",
        "//third_party/tensorflow/compiler/xla/pjrt/proto:compile_options_proto_cc",
        "//third_party/tensorflow/compiler/xla/tsl/lib/core:status_test_util",
        "//third_party/tensorflow/tsl/platform:status_matchers",
    ],
)

cc_library(
    name = "pjrt_device_description",
    hdrs = ["pjrt_device_description.h"],
    visibility = internal_visibility([":friends"]),
    deps = [
        ":pjrt_common",
        "//third_party/absl/container:flat_hash_map",
        "//third_party/absl/status",
        "//third_party/absl/status:statusor",
        "//third_party/absl/strings:string_view",
        "//third_party/absl/types:span",
    ],
)

cc_library(
    name = "pjrt_compiler",
    srcs = ["pjrt_compiler.cc"],
    hdrs = ["pjrt_compiler.h"],
    visibility = internal_visibility([":friends"]),
    deps = [
        ":metrics",
        ":pjrt_device_description",
        ":pjrt_executable",
        "//third_party/absl/container:flat_hash_map",
        "//third_party/absl/log",
        "//third_party/absl/status",
        "//third_party/absl/status:statusor",
        "//third_party/absl/strings",
        "//third_party/absl/synchronization",
        "//third_party/absl/types:span",
        "//third_party/llvm/llvm-project/mlir:IR",
        "//third_party/tensorflow/compiler/xla:shape_util",
        "//third_party/tensorflow/compiler/xla/hlo/builder:xla_computation",
        "//third_party/tensorflow/compiler/xla/pjrt/proto:pjrt_partial_program_proto_cc",
        "//third_party/tensorflow/tsl/platform:fingerprint",
    ],
)

xla_cc_test(
    name = "pjrt_compiler_test",
    srcs = ["pjrt_compiler_test.cc"],
    deps = [
        ":metrics",
        ":pjrt_client",
        ":pjrt_compiler",
        ":pjrt_device_description",
        "//testing/base/public:gunit_main",
        "//third_party/absl/container:flat_hash_map",
        "//third_party/absl/log",
        "//third_party/absl/status:statusor",
        "//third_party/absl/strings",
        "//third_party/tensorflow/compiler/xla/hlo/builder:xla_computation",
        "//third_party/tensorflow/compiler/xla/tsl/lib/monitoring:cell_reader",
        "//third_party/tensorflow/tsl/platform:status_matchers",
    ],
)

cc_library(
    name = "pjrt_common",
    srcs = ["pjrt_common.cc"],
    hdrs = ["pjrt_common.h"],
    visibility = internal_visibility([":friends"]),
    deps = [
        "//third_party/tensorflow/compiler/xla/pjrt/proto:pjrt_value_type_proto_cc",
        "//third_party/tensorflow/compiler/xla/tsl/lib/gtl:int_type",
    ],
)

xla_cc_test(
    name = "pjrt_common_test",
    srcs = ["pjrt_common_test.cc"],
    deps = [
        ":pjrt_common",
        "//testing/base/public:gunit_main",
        "//third_party/tensorflow/compiler/xla/pjrt/proto:pjrt_value_type_proto_cc",
        "//third_party/tensorflow/tsl/platform:status_matchers",
        "//third_party/tensorflow/tsl/platform:test",
    ],
)

cc_library(
    name = "utils",
    srcs = ["utils.cc"],
    hdrs = ["utils.h"],
    visibility = internal_visibility(["//third_party/tensorflow/compiler/xla:friends"]),
    deps = [
        ":layout_mode",
        "//third_party/absl/algorithm:container",
        "//third_party/absl/container:flat_hash_map",
        "//third_party/absl/log",
        "//third_party/absl/log:check",
        "//third_party/absl/status",
        "//third_party/absl/status:statusor",
        "//third_party/absl/strings",
        "//third_party/absl/types:span",
        "//third_party/llvm/llvm-project/mlir:FuncDialect",
        "//third_party/llvm/llvm-project/mlir:IR",
        "//third_party/llvm/llvm-project/mlir:Support",
        "//third_party/tensorflow/compiler/xla:shape_util",
        "//third_party/tensorflow/compiler/xla:status_macros",
        "//third_party/tensorflow/compiler/xla:util",
        "//third_party/tensorflow/compiler/xla:xla_data_proto_cc",
        "//third_party/tensorflow/compiler/xla/client:executable_build_options",
        "//third_party/tensorflow/compiler/xla/hlo/builder:xla_computation",
        "//third_party/tensorflow/compiler/xla/hlo/ir:hlo",
        "//third_party/tensorflow/compiler/xla/service:computation_placer",
        "//third_party/tensorflow/compiler/xla/service:hlo_proto_cc",
        "//third_party/tensorflow/tsl/platform:errors",
        "//third_party/tensorflow/tsl/platform:logging",
        "//third_party/tensorflow/tsl/platform:platform_port",
        "//third_party/tensorflow/tsl/platform:statusor",
    ],
)

cc_library(
    name = "pjrt_layout",
    hdrs = ["pjrt_layout.h"],
    visibility = internal_visibility(["//third_party/tensorflow/compiler/xla:friends"]),
    deps = [
        "//third_party/absl/log:check",
        "//third_party/absl/status:statusor",
        "//third_party/absl/strings",
        "//third_party/absl/strings:str_format",
        "//third_party/tensorflow/compiler/xla:shape_util",
        "//third_party/tensorflow/compiler/xla/hlo/parser:hlo_parser",
        "//third_party/tensorflow/tsl/platform:statusor",
    ],
)

cc_library(
    name = "layout_mode",
    srcs = ["layout_mode.cc"],
    hdrs = ["layout_mode.h"],
    visibility = ["//third_party/tensorflow/compiler/xla:friends"],
    deps = [
        "//third_party/absl/status",
        "//third_party/absl/status:statusor",
        "//third_party/absl/strings",
        "//third_party/tensorflow/compiler/xla:shape_util",
        "//third_party/tensorflow/compiler/xla/hlo/parser:hlo_parser",
    ],
)

cc_library(
    name = "metrics",
    srcs = ["metrics.cc"],
    hdrs = ["metrics.h"],
    deps = [
        "//third_party/absl/base:core_headers",
        "//third_party/absl/strings",
        "//third_party/tensorflow/compiler/xla/tsl/lib/monitoring:counter",
        "//third_party/tensorflow/compiler/xla/tsl/lib/monitoring:gauge",
    ],
)

tf_proto_library(
    name = "stream_executor_executable_proto",
    srcs = ["stream_executor_executable.proto"],
    protodeps = [
        "//third_party/tensorflow/compiler/xla/pjrt/proto:compile_options_proto",
        "//third_party/tensorflow/compiler/xla:xla_proto",
    ],
    visibility = ["//visibility:public"],
)

cc_library(
    name = "stream_executor_executable",
    srcs = ["stream_executor_executable.cc"],
    hdrs = ["stream_executor_executable.h"],
    deps = [
        ":host_memory_spaces",
        ":pjrt_common",
        ":pjrt_executable",
        ":stream_executor_executable_proto_cc",
        "//third_party/absl/container:flat_hash_map",
        "//third_party/absl/log:check",
        "//third_party/absl/status",
        "//third_party/absl/status:statusor",
        "//third_party/absl/strings:string_view",
        "//third_party/tensorflow/compiler/xla:shape_util",
        "//third_party/tensorflow/compiler/xla:util",
        "//third_party/tensorflow/compiler/xla/client:local_client",
        "//third_party/tensorflow/compiler/xla/hlo/ir:hlo",
        "//third_party/tensorflow/compiler/xla/pjrt/proto:compile_options_proto_cc",
        "//third_party/tensorflow/compiler/xla/service:compiler",
        "//third_party/tensorflow/compiler/xla/service:executable",
        "//third_party/tensorflow/compiler/xla/service:hlo_proto_cc",
        "//third_party/tensorflow/compiler/xla/service:hlo_proto_util",
        "//third_party/tensorflow/compiler/xla/tsl/platform:statusor",
    ],
)

cc_library(
    name = "pjrt_stream_executor_client",
    srcs = [
        "pjrt_stream_executor_client.cc",
    ],
    hdrs = ["pjrt_stream_executor_client.h"],
    visibility = internal_visibility(["//third_party/tensorflow/compiler/xla:friends"]),
    deps = [
        ":abstract_tracked_device_buffer",
        ":event_pool",
        ":host_callback",
        ":host_memory_spaces",
        ":local_device_state",
        ":metrics",
        ":mlir_to_hlo",
        ":pjrt_client",
        ":pjrt_common",
        ":pjrt_compiler",
        ":pjrt_executable",
        ":pjrt_future",
        ":pjrt_stream_executor_device_description",
        ":semaphore",
        ":stream_executor_executable",
        ":tracked_device_buffer",
        ":transpose",
        ":utils",
        "//third_party/absl/algorithm:container",
        "//third_party/absl/base",
        "//third_party/absl/base:core_headers",
        "//third_party/absl/container:flat_hash_map",
        "//third_party/absl/container:flat_hash_set",
        "//third_party/absl/container:inlined_vector",
        "//third_party/absl/functional:any_invocable",
        "//third_party/absl/log",
        "//third_party/absl/log:check",
        "//third_party/absl/memory",
        "//third_party/absl/status",
        "//third_party/absl/status:statusor",
        "//third_party/absl/strings",
        "//third_party/absl/strings:str_format",
        "//third_party/absl/synchronization",
        "//third_party/absl/time",
        "//third_party/absl/types:span",
        "//third_party/llvm/llvm-project/mlir:IR",
        "//third_party/tensorflow/compiler/xla:executable_run_options",
        "//third_party/tensorflow/compiler/xla:literal",
        "//third_party/tensorflow/compiler/xla:shape_tree",
        "//third_party/tensorflow/compiler/xla:shape_util",
        "//third_party/tensorflow/compiler/xla:util",
        "//third_party/tensorflow/compiler/xla:xla_data_proto_cc",
        "//third_party/tensorflow/compiler/xla:xla_proto_cc",
        "//third_party/tensorflow/compiler/xla/client:executable_build_options",
        "//third_party/tensorflow/compiler/xla/client:local_client",
        "//third_party/tensorflow/compiler/xla/hlo/builder:xla_computation",
        "//third_party/tensorflow/compiler/xla/hlo/ir:hlo",
        "//third_party/tensorflow/compiler/xla/pjrt/distributed:protocol_proto_cc",
        "//third_party/tensorflow/compiler/xla/pjrt/profiling:device_time_measurement",
        "//third_party/tensorflow/compiler/xla/pjrt/profiling:profiling_context",
        "//third_party/tensorflow/compiler/xla/service:compiler",
        "//third_party/tensorflow/compiler/xla/service:computation_layout",
        "//third_party/tensorflow/compiler/xla/service:computation_placer",
        "//third_party/tensorflow/compiler/xla/service:dump",
        "//third_party/tensorflow/compiler/xla/service:executable",
        "//third_party/tensorflow/compiler/xla/service:generic_transfer_manager",
        "//third_party/tensorflow/compiler/xla/service:hlo_cost_analysis",
        "//third_party/tensorflow/compiler/xla/service:hlo_proto_cc",
        "//third_party/tensorflow/compiler/xla/service:maybe_owning_device_memory",
        "//third_party/tensorflow/compiler/xla/service:shaped_buffer",
        "//third_party/tensorflow/compiler/xla/service:transfer_manager",
        "//third_party/tensorflow/compiler/xla/service/gpu:gpu_executable_run_options",
        "//third_party/tensorflow/compiler/xla/stream_executor:device_memory",
        "//third_party/tensorflow/compiler/xla/stream_executor:device_memory_allocator",
        "//third_party/tensorflow/compiler/xla/stream_executor:stream",
        "//third_party/tensorflow/compiler/xla/tsl/concurrency:ref_count",
        "//third_party/tensorflow/compiler/xla/tsl/framework:allocator",
        "//third_party/tensorflow/compiler/xla/tsl/platform:env",
        "//third_party/tensorflow/tsl/platform:casts",
        "//third_party/tensorflow/tsl/platform:fingerprint",
        "//third_party/tensorflow/tsl/platform:platform_port",
        "//third_party/tensorflow/tsl/profiler/lib:connected_traceme",
        "//third_party/tensorflow/tsl/profiler/lib:context_types_hdrs",
        "//third_party/tensorflow/tsl/profiler/lib:traceme",
    ],
)

xla_cc_test(
    name = "pjrt_stream_executor_client_test",
    srcs = ["pjrt_stream_executor_client_test.cc"],
    deps = [
        ":local_device_state",
        ":pjrt_client",
        ":pjrt_executable",
        ":pjrt_future",
        ":pjrt_stream_executor_client",
        "//testing/base/public:gunit_main",
        "//third_party/absl/functional:any_invocable",
        "//third_party/absl/status",
        "//third_party/absl/status:statusor",
        "//third_party/absl/synchronization",
        "//third_party/tensorflow/compiler/xla:literal",
        "//third_party/tensorflow/compiler/xla:literal_comparison",
        "//third_party/tensorflow/compiler/xla:literal_util",
        "//third_party/tensorflow/compiler/xla:shape_util",
        "//third_party/tensorflow/compiler/xla:status_macros",
        "//third_party/tensorflow/compiler/xla:xla_data_proto_cc",
        "//third_party/tensorflow/compiler/xla/client:client_library",
        "//third_party/tensorflow/compiler/xla/client:local_client",
        "//third_party/tensorflow/compiler/xla/hlo/builder:xla_builder",
        "//third_party/tensorflow/compiler/xla/hlo/testlib:test",
        "//third_party/tensorflow/compiler/xla/service:cpu_plugin",
        "//third_party/tensorflow/compiler/xla/service:platform_util",
        "//third_party/tensorflow/compiler/xla/stream_executor:platform",
        "//third_party/tensorflow/compiler/xla/stream_executor:stream_executor_h",
        "//third_party/tensorflow/compiler/xla/tsl/lib/core:status_test_util",
        "//third_party/tensorflow/compiler/xla/tsl/platform:statusor",
    ],
)

cc_library(
    name = "mlir_to_hlo",
    srcs = ["mlir_to_hlo.cc"],
    hdrs = ["mlir_to_hlo.h"],
    visibility = internal_visibility([":friends"]),
    deps = [
        "//third_party/absl/status",
        "//third_party/absl/status:statusor",
        "//third_party/absl/strings",
        "//third_party/llvm/llvm-project/llvm:Support",
        "//third_party/llvm/llvm-project/mlir:ArithDialect",
        "//third_party/llvm/llvm-project/mlir:BytecodeWriter",
        "//third_party/llvm/llvm-project/mlir:FuncDialect",
        "//third_party/llvm/llvm-project/mlir:FuncExtensions",
        "//third_party/llvm/llvm-project/mlir:IR",
        "//third_party/llvm/llvm-project/mlir:MLProgramDialect",
        "//third_party/llvm/llvm-project/mlir:Parser",
        "//third_party/llvm/llvm-project/mlir:Pass",
        "//third_party/llvm/llvm-project/mlir:ReconcileUnrealizedCasts",
        "//third_party/llvm/llvm-project/mlir:Support",
        "//third_party/llvm/llvm-project/mlir:Transforms",
        "//third_party/openxla/shardy/src/shardy/dialect/sdy/ir:dialect",
        "//third_party/openxla/shardy/src/shardy/dialect/sdy/ir:register",
        "//third_party/stablehlo:chlo_ops",
        "//third_party/stablehlo:register",
        "//third_party/stablehlo:stablehlo_ops",
        "//third_party/stablehlo:stablehlo_passes",
        "//third_party/stablehlo:stablehlo_portable_api",
        "//third_party/stablehlo:stablehlo_serialization",
        "//third_party/stablehlo:version",
        "//third_party/tensorflow/compiler/xla:debug_options_flags",
        "//third_party/tensorflow/compiler/xla:util",
        "//third_party/tensorflow/compiler/xla/hlo/builder:xla_computation",
        "//third_party/tensorflow/compiler/xla/hlo/translate:stablehlo",
        "//third_party/tensorflow/compiler/xla/mlir/utils:error_util",
        "//third_party/tensorflow/compiler/xla/mlir_hlo:hlo_dialect_registration",
        "//third_party/tensorflow/compiler/xla/mlir_hlo:mhlo_passes",
        "//third_party/tensorflow/compiler/xla/mlir_hlo:stablehlo_extension_passes",
        "//third_party/tensorflow/compiler/xla/service/spmd/shardy:constants",
        "//third_party/tensorflow/compiler/xla/service/spmd/shardy:utils",
        "//third_party/tensorflow/compiler/xla/service/spmd/shardy/sdy_round_trip:pipelines",
        "//third_party/tensorflow/compiler/xla/service/spmd/shardy/stablehlo_round_trip:stablehlo_export",
        "//third_party/tensorflow/tsl/platform:statusor",
    ],
)

xla_cc_test(
    name = "mlir_to_hlo_test",
    srcs = ["mlir_to_hlo_test.cc"],
    deps = [
        ":mlir_to_hlo",
        "//testing/base/public:gunit_main",
        "//third_party/absl/status",
        "//third_party/absl/strings",
        "//third_party/llvm/llvm-project/mlir:IR",
        "//third_party/stablehlo:stablehlo_portable_api",
        "//third_party/tensorflow/compiler/xla/hlo/testlib:test",
        "//third_party/tensorflow/tsl/platform:statusor",
    ],
)

cc_library(
    name = "pjrt_future",
    srcs = ["pjrt_future.cc"],
    hdrs = ["pjrt_future.h"],
    visibility = internal_visibility([":friends"]),
    deps = [
        "//third_party/absl/base:core_headers",
        "//third_party/absl/log",
        "//third_party/absl/log:check",
        "//third_party/absl/status",
        "//third_party/absl/synchronization",
        "//third_party/absl/types:span",
        "//third_party/tensorflow/compiler/xla/tsl/concurrency:async_value",
        "//third_party/tensorflow/compiler/xla/tsl/concurrency:ref_count",
        "//third_party/tensorflow/compiler/xla/tsl/platform:logging",
    ],
)

xla_cc_test(
    name = "pjrt_future_test",
    srcs = ["pjrt_future_test.cc"],
    deps = [
        ":pjrt_future",
        "//third_party/absl/status",
        "//third_party/absl/status:statusor",
        "//third_party/tensorflow/compiler/xla/tsl/platform:test",
        "//third_party/tensorflow/compiler/xla/tsl/platform:test_benchmark",
        "//third_party/tensorflow/compiler/xla/tsl/platform:test_main",
    ],
)

cc_library(
    name = "host_memory_spaces",
    srcs = ["host_memory_spaces.cc"],
    hdrs = ["host_memory_spaces.h"],
    visibility = internal_visibility([":friends"]),
    deps = [
        ":pjrt_client",
        "//third_party/absl/log:check",
        "//third_party/absl/strings:str_format",
        "//third_party/absl/strings:string_view",
        "//third_party/absl/types:span",
        "//third_party/tensorflow/tsl/platform:fingerprint",
    ],
)

# Transitional forwarding target. Use pjrt/plugin/xla_cpu:xla_cpu_pjrt_client instead.
cc_library(
    name = "tfrt_cpu_pjrt_client",
    hdrs = ["tfrt_cpu_pjrt_client.h"],
    visibility = internal_visibility([
        "//third_party/tensorflow/compiler/xla:friends",
    ]),
    deps = [
        "//third_party/tensorflow/compiler/xla/pjrt/plugin/xla_cpu:xla_cpu_pjrt_client",
    ],
)

cc_library(
    name = "lru_cache",
    hdrs = ["lru_cache.h"],
    visibility = internal_visibility([
        "//third_party/tensorflow/compiler/xla:friends",
    ]),
    deps = [
        "//third_party/absl/container:node_hash_map",
        "//third_party/tensorflow/tsl/platform:logging",
    ],
)

xla_cc_test(
    name = "lru_cache_test",
    srcs = ["lru_cache_test.cc"],
    deps = [
        ":lru_cache",
        "//testing/base/public:gunit_main",
        "//third_party/tensorflow/compiler/xla/hlo/testlib:test",
    ],
)

cc_library(
    name = "transpose",
    srcs = [
        "transpose.cc",
        "transpose_kernels.h",
    ],
    hdrs = ["transpose.h"],
    visibility = internal_visibility([":friends"]),
    deps = [
        ":lru_cache",
        "//third_party/absl/algorithm:container",
        "//third_party/absl/base:core_headers",
        "//third_party/absl/container:inlined_vector",
        "//third_party/absl/functional:function_ref",
        "//third_party/absl/status",
        "//third_party/absl/status:statusor",
        "//third_party/absl/strings",
        "//third_party/absl/strings:str_format",
        "//third_party/absl/synchronization",
        "//third_party/absl/types:span",
        "//third_party/absl/types:variant",
        "//third_party/tensorflow/compiler/xla:compiler_macros",
        "//third_party/tensorflow/compiler/xla:ef57",
        "//third_party/tensorflow/compiler/xla:permutation_util",
        "//third_party/tensorflow/compiler/xla:util",
        "//third_party/tensorflow/compiler/xla/tsl/platform:logging",
        "//third_party/tensorflow/compiler/xla/tsl/platform:statusor",
        "//third_party/tensorflow/tsl/profiler/lib:traceme",
    ],
)

xla_cc_test(
    name = "transpose_test",
    srcs = ["transpose_test.cc"],
    deps = [
        ":transpose",
        "//third_party/absl/algorithm:container",
        "//third_party/absl/container:inlined_vector",
        "//third_party/absl/log",
        "//third_party/absl/log:check",
        "//third_party/absl/numeric:int128",
        "//third_party/absl/strings",
        "//third_party/absl/strings:str_format",
        "//third_party/absl/types:span",
        "//third_party/eigen3",
        "//third_party/tensorflow/compiler/xla:array",
        "//third_party/tensorflow/compiler/xla:permutation_util",
        "//third_party/tensorflow/compiler/xla:shape_util",
        "//third_party/tensorflow/compiler/xla:util",
        "//third_party/tensorflow/compiler/xla/hlo/testlib:test",
        "//third_party/tensorflow/compiler/xla/tsl/lib/core:status_test_util",
        "//third_party/tensorflow/compiler/xla/tsl/protobuf:error_codes_proto_impl_cc",
        "//third_party/tensorflow/tsl/platform:env",
        "//third_party/tensorflow/tsl/platform:statusor",
        "//third_party/tensorflow/tsl/platform:test_benchmark",
        "//third_party/tensorflow/tsl/platform:test_main",
    ],
)

cc_library(
    name = "pjrt_c_api_client",
    srcs = ["pjrt_c_api_client.cc"],
    hdrs = ["pjrt_c_api_client.h"],
    visibility = internal_visibility([":friends"]),
    deps = [
        ":mlir_to_hlo",
        ":pjrt_api",
        ":pjrt_client",
        ":pjrt_common",
        ":pjrt_compiler",
        ":pjrt_device_description",
        ":pjrt_executable",
        ":pjrt_future",
        ":pjrt_layout",
        "//third_party/absl/cleanup",
        "//third_party/absl/container:flat_hash_map",
        "//third_party/absl/container:inlined_vector",
        "//third_party/absl/functional:any_invocable",
        "//third_party/absl/log",
        "//third_party/absl/log:check",
        "//third_party/absl/status",
        "//third_party/absl/status:statusor",
        "//third_party/absl/strings",
        "//third_party/absl/strings:str_format",
        "//third_party/absl/synchronization",
        "//third_party/absl/types:span",
        "//third_party/llvm/llvm-project/llvm:Support",
        "//third_party/llvm/llvm-project/mlir:IR",
        "//third_party/llvm/llvm-project/mlir:Pass",
        "//third_party/llvm/llvm-project/mlir:Support",
        "//third_party/tensorflow/compiler/xla:literal",
        "//third_party/tensorflow/compiler/xla:shape_util",
        "//third_party/tensorflow/compiler/xla:util",
        "//third_party/tensorflow/compiler/xla:xla_data_proto_cc",
        "//third_party/tensorflow/compiler/xla:xla_proto_cc",
        "//third_party/tensorflow/compiler/xla/ffi:execution_context",
        "//third_party/tensorflow/compiler/xla/hlo/builder:xla_computation",
        "//third_party/tensorflow/compiler/xla/hlo/ir:hlo",
        "//third_party/tensorflow/compiler/xla/hlo/translate/mhlo_to_hlo:mlir_hlo_to_hlo",
        "//third_party/tensorflow/compiler/xla/mlir_hlo:mhlo_passes",
        "//third_party/tensorflow/compiler/xla/pjrt/c:pjrt_c_api_ffi_extension_hdrs",
        "//third_party/tensorflow/compiler/xla/pjrt/c:pjrt_c_api_hdrs",
        "//third_party/tensorflow/compiler/xla/pjrt/c:pjrt_c_api_helpers",
        "//third_party/tensorflow/compiler/xla/pjrt/c:pjrt_c_api_layouts_extension_hdrs",
        "//third_party/tensorflow/compiler/xla/pjrt/c:pjrt_c_api_memory_descriptions_extension_hdrs",
        "//third_party/tensorflow/compiler/xla/pjrt/c:pjrt_c_api_profiler_extension_hdrs",
        "//third_party/tensorflow/compiler/xla/pjrt/c:pjrt_c_api_stream_extension_hdrs",
        "//third_party/tensorflow/compiler/xla/pjrt/distributed:key_value_store_interface",
        "//third_party/tensorflow/compiler/xla/pjrt/proto:compile_options_proto_cc",
        "//third_party/tensorflow/compiler/xla/service:computation_placer_hdr",
        "//third_party/tensorflow/compiler/xla/service:hlo_cost_analysis",
        "//third_party/tensorflow/compiler/xla/service:hlo_proto_cc",
        "//third_party/tensorflow/compiler/xla/tsl/framework:allocator",
        "//third_party/tensorflow/compiler/xla/tsl/platform:errors",
        "//third_party/tensorflow/compiler/xla/tsl/platform:status",
        "//third_party/tensorflow/compiler/xla/tsl/platform:statusor",
        "//third_party/tensorflow/tsl/platform:casts",
        "//third_party/tensorflow/tsl/platform:fingerprint",
    ],
)

xla_cc_test(
    name = "pjrt_c_api_client_test",
    srcs = ["pjrt_c_api_client_test.cc"],
    tags = [
        "nomsan",
    ],
    deps = [
        ":mlir_to_hlo",
        ":pjrt_api",
        ":pjrt_c_api_client",
        ":pjrt_client",
        ":pjrt_compiler",
        ":pjrt_device_description",
        ":pjrt_executable",
        "//testing/base/public:gunit_main",
        "//third_party/absl/status",
        "//third_party/absl/strings:str_format",
        "//third_party/absl/types:span",
        "//third_party/llvm/llvm-project/mlir:IR",
        "//third_party/stablehlo:version",
        "//third_party/tensorflow/compiler/xla:cpu_function_runtime",
        "//third_party/tensorflow/compiler/xla:literal",
        "//third_party/tensorflow/compiler/xla:literal_util",
        "//third_party/tensorflow/compiler/xla:shape_util",
        "//third_party/tensorflow/compiler/xla/ffi",
        "//third_party/tensorflow/compiler/xla/ffi:ffi_api",
        "//third_party/tensorflow/compiler/xla/hlo/builder:xla_builder",
        "//third_party/tensorflow/compiler/xla/hlo/builder:xla_computation",
        "//third_party/tensorflow/compiler/xla/hlo/parser:hlo_parser",
        "//third_party/tensorflow/compiler/xla/pjrt/c:pjrt_c_api_cpu_internal",
        "//third_party/tensorflow/compiler/xla/pjrt/c:pjrt_c_api_hdrs",
        "//third_party/tensorflow/compiler/xla/tests:literal_test_util",
        "//third_party/tensorflow/compiler/xla/tsl/lib/core:status_test_util",
        "//third_party/tensorflow/compiler/xla/tsl/platform:statusor",
        "//third_party/tensorflow/compiler/xla/tsl/platform:test",
    ],
)

cc_library(
    name = "tf_pjrt_client",
    srcs = ["tf_pjrt_client.cc"],
    hdrs = ["tf_pjrt_client.h"],
    visibility = ["//visibility:public"],
    deps = [
        ":pjrt_client",
        ":pjrt_common",
        ":pjrt_compiler",
        ":pjrt_executable",
        ":pjrt_future",
        "//third_party/absl/base:core_headers",
        "//third_party/absl/container:flat_hash_map",
        "//third_party/absl/container:flat_hash_set",
        "//third_party/absl/functional:any_invocable",
        "//third_party/absl/log",
        "//third_party/absl/log:check",
        "//third_party/absl/status",
        "//third_party/absl/status:statusor",
        "//third_party/absl/strings:string_view",
        "//third_party/absl/synchronization",
        "//third_party/absl/types:span",
        "//third_party/tensorflow/compiler/xla:literal",
        "//third_party/tensorflow/compiler/xla:shape_util",
        "//third_party/tensorflow/compiler/xla:util",
        "//third_party/tensorflow/compiler/xla:xla_data_proto_cc",
        "//third_party/tensorflow/compiler/xla/hlo/builder:xla_computation",
        "//third_party/tensorflow/compiler/xla/hlo/ir:hlo",
        "//third_party/tensorflow/compiler/xla/service:computation_placer_hdr",
        "//third_party/tensorflow/compiler/xla/service:hlo_cost_analysis",
        "//third_party/tensorflow/tsl/platform:casts",
        "//third_party/tensorflow/tsl/platform:errors",
    ],
)

xla_cc_test(
    name = "tf_pjrt_client_test",
    srcs = ["tf_pjrt_client_test.cc"],
    deps = [
        ":tf_pjrt_client",
        "//testing/base/public:gunit_main",
        "//third_party/tensorflow/compiler/xla:literal_util",
        "//third_party/tensorflow/compiler/xla:xla_data_proto_cc",
        "//third_party/tensorflow/compiler/xla/hlo/parser:hlo_parser",
        "//third_party/tensorflow/compiler/xla/pjrt/plugin/xla_cpu:cpu_client_options",
        "//third_party/tensorflow/compiler/xla/pjrt/plugin/xla_cpu:xla_cpu_pjrt_client",
        "//third_party/tensorflow/compiler/xla/service:hlo_proto_cc",
        "//third_party/tensorflow/tsl/platform:env",
        "//third_party/tensorflow/tsl/platform:test",
    ],
)

cc_library(
    name = "host_callback",
    srcs = ["host_callback.cc"],
    hdrs = ["host_callback.h"],
    visibility = internal_visibility([":friends"]),
    deps = [
        ":pjrt_client",
        ":pjrt_executable",
        ":pjrt_future",
        "//third_party/absl/base:core_headers",
        "//third_party/absl/log:check",
        "//third_party/absl/status",
        "//third_party/absl/status:statusor",
        "//third_party/absl/synchronization",
        "//third_party/tensorflow/compiler/xla:shape_util",
        "//third_party/tensorflow/compiler/xla/ffi:ffi_api",
        "//third_party/tensorflow/compiler/xla/ffi/api:ffi",
        "//third_party/tensorflow/tsl/platform:logging",
        "//third_party/tensorflow/tsl/platform:status",
    ],
)

xla_cc_test(
    name = "host_callback_test",
    srcs = ["host_callback_test.cc"],
    deps = [
        ":host_callback",
        ":pjrt_client",
        "//testing/base/public:gunit_main",
        "//third_party/absl/log:check",
        "//third_party/absl/status",
        "//third_party/absl/status:statusor",
        "//third_party/absl/synchronization",
        "//third_party/tensorflow/compiler/xla:xla_data_proto_cc",
        "//third_party/tensorflow/compiler/xla/tests:literal_test_util",
        "//third_party/tensorflow/compiler/xla/tsl/lib/core:status_test_util",
    ],
)

cc_library(
    name = "exceptions",
    hdrs = ["exceptions.h"],
    copts = [
        "-fexceptions",
        "-fno-strict-aliasing",
    ],
    features = ["-use_header_modules"],
    visibility = internal_visibility([":friends"]),
    deps = [
        "//third_party/absl/log:check",
        "//third_party/absl/status",
        "//third_party/absl/strings",
    ],
)

cc_library(
    name = "status_casters",
    hdrs = ["status_casters.h"],
    copts = [
        "-fexceptions",
        "-fno-strict-aliasing",
    ],
    features = ["-use_header_modules"],
    visibility = internal_visibility([":friends"]),
    deps = [
        ":exceptions",
        "//third_party/absl/status",
        "//third_party/absl/status:statusor",
        "//third_party/tensorflow/tsl/platform:macros",
    ],
)

cc_library(
    name = "triton",
    srcs = if_cuda_is_configured(
        ["triton_cuda.cc"],
        ["triton_stub.cc"],
    ),
    hdrs = ["triton.h"],
    visibility = internal_visibility([":friends"]),
    deps = [
        "//third_party/absl/status:statusor",
        "//third_party/absl/strings:string_view",
        "//third_party/llvm/llvm-project/llvm:TargetParser",
        "//third_party/tensorflow/compiler/xla/tsl/platform:logging",
    ] + if_cuda_is_configured(
        [
            "//third_party/absl/base",
            "//third_party/absl/status",
            "//third_party/absl/strings:str_format",
            "//third_party/absl/strings",
            "//third_party/llvm/llvm-project/llvm:Core",
            "//third_party/llvm/llvm-project/llvm:IRReader",
            "//third_party/llvm/llvm-project/llvm:Linker",
            "//third_party/llvm/llvm-project/llvm:MC",
            "//third_party/llvm/llvm-project/llvm:Support",
            "//third_party/llvm/llvm-project/llvm:Target",
            "//third_party/llvm/llvm-project/mlir:ArithDialect",
            "//third_party/llvm/llvm-project/mlir:ArithToLLVM",
            "//third_party/llvm/llvm-project/mlir:BuiltinToLLVMIRTranslation",
            "//third_party/llvm/llvm-project/mlir:BytecodeWriter",
            "//third_party/llvm/llvm-project/mlir:ConversionPasses",
            "//third_party/llvm/llvm-project/mlir:DataLayoutInterfaces",
            "//third_party/llvm/llvm-project/mlir:ExecutionEngineUtils",
            "//third_party/llvm/llvm-project/mlir:FuncExtensions",
            "//third_party/llvm/llvm-project/mlir:IndexToLLVM",
            "//third_party/llvm/llvm-project/mlir:IR",
            "//third_party/llvm/llvm-project/mlir:LLVMCommonConversion",
            "//third_party/llvm/llvm-project/mlir:LLVMIRTransforms",
            "//third_party/llvm/llvm-project/mlir:LLVMToLLVMIRTranslation",
            "//third_party/llvm/llvm-project/mlir:NVVMTarget",
            "//third_party/llvm/llvm-project/mlir:NVVMToLLVMIRTranslation",
            "//third_party/llvm/llvm-project/mlir:Parser",
            "//third_party/llvm/llvm-project/mlir:Pass",
            "//third_party/llvm/llvm-project/mlir:SCFToControlFlow",
            "//third_party/llvm/llvm-project/mlir:ToLLVMIRTranslation",
            "//third_party/llvm/llvm-project/mlir:Transforms",
            "//third_party/tensorflow/compiler/xla/backends/gpu/codegen/triton:compilation_pipeline",
            "//third_party/tensorflow/compiler/xla/tsl/platform:errors",
            "//third_party/tensorflow/compiler/xla/tsl/platform:statusor",
            "//third_party/triton:TritonDialects",
            "//third_party/triton:TritonGPUToLLVM",
            "//third_party/triton:TritonGPUTransforms",
            "//third_party/triton:TritonNvidiaGPUTransforms",
            "//third_party/triton:TritonToTritonGPU",
            "//third_party/triton:TritonTransforms",
            "//third_party/triton/third_party/nvidia:NVGPUToLLVM",
            "//third_party/triton/third_party/nvidia:TritonNVIDIAGPUToLLVM",
        ],
        ["//third_party/absl/status"],
    ),
)

cc_library(
    name = "device_event",
    hdrs = ["device_event.h"],
    deps = [
        ":pjrt_future",
        "//third_party/absl/functional:any_invocable",
        "//third_party/absl/status",
        "//third_party/absl/strings",
        "//third_party/absl/types:span",
        "//third_party/tensorflow/compiler/xla/tsl/concurrency:async_value",
        "//third_party/tensorflow/compiler/xla/tsl/concurrency:ref_count",
    ],
)

cc_library(
    name = "raw_buffer",
    srcs = ["raw_buffer.cc"],
    hdrs = ["raw_buffer.h"],
    deps = [
        ":device_event",
        ":pjrt_client",
        ":pjrt_future",
        "//third_party/absl/status",
        "//third_party/absl/status:statusor",
        "//third_party/absl/strings",
        "//third_party/tensorflow/compiler/xla/tsl/concurrency:ref_count",
    ],
)

xla_cc_test(
    name = "raw_buffer_test",
    srcs = ["raw_buffer_test.cc"],
    deps = [
        ":raw_buffer",
        "//testing/base/public:gunit_main",
        "//third_party/absl/status",
        "//third_party/absl/status:statusor",
        "//third_party/tensorflow/compiler/xla/tsl/concurrency:ref_count",
        "//third_party/tensorflow/compiler/xla/tsl/platform:errors",
        "//third_party/tensorflow/compiler/xla/tsl/platform:status_matchers",
        "//third_party/tensorflow/compiler/xla/tsl/platform:test",
    ],
)

cc_library(
    name = "pjrt_stream_executor_device_description",
    hdrs = ["pjrt_stream_executor_device_description.h"],
    deps = [
        ":pjrt_device_description",
        "//third_party/absl/container:flat_hash_map",
        "//third_party/absl/strings:string_view",
        "//third_party/absl/types:span",
    ],
)

cc_library(
    name = "async_work_runner",
    hdrs = ["async_work_runner.h"],
    deps = [
        "//third_party/absl/functional:any_invocable",
        "//third_party/absl/types:span",
        "//third_party/tensorflow/compiler/xla/tsl/concurrency:async_value",
        "//third_party/tensorflow/compiler/xla/tsl/concurrency:ref_count",
    ],
)
